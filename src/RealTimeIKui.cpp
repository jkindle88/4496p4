// generated by Fast Light User Interface Designer (fluid) version 1.0107

#include "RealTimeIKui.h"
#include "PhylterGLWindow.h"
#include "PhowardData.h"
#include "Model.h"
#include "C3dFileInfo.h"

void RealTimeIKUI::cb_mFrame_sli_i(Fl_Value_Slider* o, void* v) {
  Frame_scr_cb(o, v);
}
void RealTimeIKUI::cb_mFrame_sli(Fl_Value_Slider* o, void* v) {
  ((RealTimeIKUI*)(o->parent()->parent()->user_data()))->cb_mFrame_sli_i(o,v);
}

void RealTimeIKUI::cb_mFrameCounter_cou_i(Fl_Counter* o, void* v) {
  FrameCounter_cb(o, v);
}
void RealTimeIKUI::cb_mFrameCounter_cou(Fl_Counter* o, void* v) {
  ((RealTimeIKUI*)(o->parent()->parent()->user_data()))->cb_mFrameCounter_cou_i(o,v);
}

void RealTimeIKUI::cb_mPlay_but_i(Fl_Button* o, void* v) {
  PlayStop_cb(o, v);
}
void RealTimeIKUI::cb_mPlay_but(Fl_Button* o, void* v) {
  ((RealTimeIKUI*)(o->parent()->parent()->user_data()))->cb_mPlay_but_i(o,v);
}

void RealTimeIKUI::cb_mSpeed_rol_i(Fl_Roller* o, void* v) {
  Speed_cb(o, v);
}
void RealTimeIKUI::cb_mSpeed_rol(Fl_Roller* o, void* v) {
  ((RealTimeIKUI*)(o->parent()->parent()->user_data()))->cb_mSpeed_rol_i(o,v);
}

void RealTimeIKUI::cb_Load_i(Fl_Menu_* o, void* v) {
  LoadModel_cb(o, v);
}
void RealTimeIKUI::cb_Load(Fl_Menu_* o, void* v) {
  ((RealTimeIKUI*)(o->parent()->user_data()))->cb_Load_i(o,v);
}

void RealTimeIKUI::cb_Load1_i(Fl_Menu_* o, void* v) {
  LoadMocap_cb(o, v);
}
void RealTimeIKUI::cb_Load1(Fl_Menu_* o, void* v) {
  ((RealTimeIKUI*)(o->parent()->user_data()))->cb_Load1_i(o,v);
}

void RealTimeIKUI::cb_Exit_i(Fl_Menu_* o, void* v) {
  Exit_cb(o, v);
}
void RealTimeIKUI::cb_Exit(Fl_Menu_* o, void* v) {
  ((RealTimeIKUI*)(o->parent()->user_data()))->cb_Exit_i(o,v);
}

void RealTimeIKUI::cb_Sliders_i(Fl_Menu_* o, void* v) {
  ShowSliders_cb(o, v);
}
void RealTimeIKUI::cb_Sliders(Fl_Menu_* o, void* v) {
  ((RealTimeIKUI*)(o->parent()->user_data()))->cb_Sliders_i(o,v);
}

void RealTimeIKUI::cb_Solve_i(Fl_Menu_* o, void* v) {
  Solve_cb(o, v);
}
void RealTimeIKUI::cb_Solve(Fl_Menu_* o, void* v) {
  ((RealTimeIKUI*)(o->parent()->user_data()))->cb_Solve_i(o,v);
}

void RealTimeIKUI::cb_Terminate_i(Fl_Menu_* o, void* v) {
  Terminate_cb(o, v);
}
void RealTimeIKUI::cb_Terminate(Fl_Menu_* o, void* v) {
  ((RealTimeIKUI*)(o->parent()->user_data()))->cb_Terminate_i(o,v);
}

Fl_Menu_Item RealTimeIKUI::menu_[] = {
 {"File", 0,  0, 0, 64, FL_NORMAL_LABEL, 1, 13, 0},
 {"Load Model", 0,  (Fl_Callback*)RealTimeIKUI::cb_Load, 0, 0, FL_NORMAL_LABEL, 1, 13, 0},
 {"Load C3D", 0,  (Fl_Callback*)RealTimeIKUI::cb_Load1, 0, 0, FL_NORMAL_LABEL, 1, 13, 0},
 {"Exit", 0,  (Fl_Callback*)RealTimeIKUI::cb_Exit, 0, 0, FL_NORMAL_LABEL, 1, 13, 0},
 {0,0,0,0,0,0,0,0,0},
 {"View", 0,  0, 0, 64, FL_NORMAL_LABEL, 1, 13, 0},
 {"Sliders", 0,  (Fl_Callback*)RealTimeIKUI::cb_Sliders, 0, 0, FL_NORMAL_LABEL, 1, 13, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Solve", 0,  0, 0, 64, FL_NORMAL_LABEL, 1, 13, 0},
 {"Run IK", 0,  (Fl_Callback*)RealTimeIKUI::cb_Solve, 0, 0, FL_NORMAL_LABEL, 1, 13, 0},
 {"Terminate", 0,  (Fl_Callback*)RealTimeIKUI::cb_Terminate, 0, 0, FL_NORMAL_LABEL, 1, 13, 0},
 {0,0,0,0,0,0,0,0,0},
 {0,0,0,0,0,0,0,0,0}
};

void RealTimeIKUI::cb_mModel_but_i(Fl_Button* o, void* v) {
  LoadModel_cb(o, v);
}
void RealTimeIKUI::cb_mModel_but(Fl_Button* o, void* v) {
  ((RealTimeIKUI*)(o->parent()->parent()->user_data()))->cb_mModel_but_i(o,v);
}

#include <FL/Fl_Pixmap.H>
static const char *idata_default[] = {
"28 28 -17 1",
" \312\342\377!\377\377\377\"\314\231\0#\377\377\231$\377\314\0%f3\0&\377\377\
\0\'\377\231\0(\0\0\0)\377\377""3*\314""f\0+ff3,\314""3\0-\0\0w.f\231\377/3f\
\377""0\0""3\231",
"                            ",
"          %%%%%%%           ",
"          &!&$$$\'           ",
"      %%%%%%%%%%%%%%%       ",
"     %$&&!!#&&&&&&&$\'(      ",
"     %\'$$))$$$$$$$$\'*(      ",
"     %\'$$))$$$$$$$$\'*(      ",
"     %\'$$))$$$$$$$$\'*(      ",
"     %\'$$)%%$$$%($$\'*(      ",
"     %\'$$))$*$*$$$$\'*(      ",
"     %\'$$)(%$$$%($$\'*(      ",
"     %\'$$))$$$$$$$$\'*(      ",
"     %\'$$))$$$$$$$$\'*(      ",
"     %\'$$))$\'\'\'$$$$\'*(      ",
"     %\'$$)),,,,,$$$\'*(      ",
"     %\'$$))$*,*$$$$\'*(      ",
"     %*\"\"$$\"\"\"\"\"\"\"\"*%(      ",
"        (\'\'\'\'\'\'\'\'\'(         ",
"        ($$)!)$$$$(         ",
"     -----------------      ",
"   --.////////////////((    ",
"  --/0(+++0000000+++(0-((   ",
" -/-/0(+++0000000+++(0-(0(  ",
" -//00(+++(00000(+++(00--(  ",
"-/0/0(++++++(((++++++(0--0( ",
"/0-00(+++++++++++++++(00(-0(",
"00-00(+++++++++++++++(00(-0(",
"00-000(+++++++++++++(000(-00"
};
static Fl_Pixmap image_default(idata_default);

void RealTimeIKUI::cb_mConstr_but_i(Fl_Button* o, void* v) {
  LoadMocap_cb(o, v);
}
void RealTimeIKUI::cb_mConstr_but(Fl_Button* o, void* v) {
  ((RealTimeIKUI*)(o->parent()->parent()->user_data()))->cb_mConstr_but_i(o,v);
}

static const char *idata_constr[] = {
"30 30 -12 1",
" \312\342\377!\0\0\0\"\231""3\0#\314""3\0$f3\0%\377\377\231&\377\231\0\'\377""\
3\0(\377""f\0)\377\314""3*3\0\0+\377\377\314",
"                              ",
"              !!              ",
"             !\"#!             ",
"             !$$!             ",
"            !%\"\"#!            ",
"            !%&\'#!            ",
"            !%&\'#!            ",
"           !%&(\'##!           ",
"           !%&(\'##!           ",
"           !)&(\'##!           ",
"           !)&(\'##!           ",
"          !%&&(\'##\"!          ",
"          !%&&(###\"!          ",
"          !%&((###\"!          ",
"          !)&(\'###\"!          ",
"          !)&(\'###\"!          ",
"         !)&&(####\"\"!         ",
"         !)&&(####\"\"!         ",
"         !)&((####\"\"!         ",
"        !#)&(\'####\"$!!        ",
"       !(#)&(\'####\"$*#!       ",
"     !!((#)&(\'###\"$**##!!     ",
"   !&+((((((##$$**##\'((\'#$!   ",
"   !!&+(((((((((((((((#\"$!!   ",
"     !!+)(((((((((((\'#$!!     ",
"       !&)&(((((((\'#\"$!       ",
"        !!&&&(((\'#\"$!!        ",
"          !!&&\'#\"$!!          ",
"            !!#\"!!            ",
"              !!              "
};
static Fl_Pixmap image_constr(idata_constr);

void RealTimeIKUI::cb_mShowModel_but_i(Fl_Button* o, void* v) {
  ShowModel_cb(o, v);
}
void RealTimeIKUI::cb_mShowModel_but(Fl_Button* o, void* v) {
  ((RealTimeIKUI*)(o->parent()->parent()->user_data()))->cb_mShowModel_but_i(o,v);
}

static const char *idata_showmodel[] = {
"28 28 -8 1",
" \312\342\377!\0\0\0\"\0\272\0#\"\"\"$UUU%www&\313\313\377\'ff\314",
"                            ",
"                            ",
"   !!!!!!!!!!!!!!!!!!!!!!   ",
"   $$!!!!!!!!!!!!!!!!!!$!   ",
"   $$!\'\'\'\'\'\'\'\'!&&&&&&&!$!   ",
"   $$!\'\'\'\'!\'\'!&&!&&&&&!$!   ",
"   $$!\'\'\'\'\'\'\'!&&&&&&&&!$!   ",
"   $$!\'\'\'\'\'\'!&&&&&&&&&!$!   ",
"   $$!\'\'\'\'\'\'!&&&&&&&&&!$!   ",
"   $$!\'\'\'\'\'!&&&&&&&&&&!$!   ",
"   $$!\'\'\'\'\'!!!!&&&&&&&!$!   ",
"   $$!\'\'\'#\'\'\'\'!&&!&&&&!$!   ",
"   $$!\'\'\'\'####!!!&&&&&!$!   ",
"   $$!\'\'\'\'\'\'\'\'!&&&&&&&!$!   ",
"   $$!\'\'\'\'\'\'\'\'!&&&&&&&!$!   ",
"   $$!!!!!!!!!!!!!!!!!!$!   ",
"   $$$$$$$$$$$\"$$$$$$$$$!   ",
"   $$$$$$$$$$$$$$$$$$$$$!   ",
"   !!!!!!!!!!!!!!!!!!!!!    ",
"   %%$%$%$$%$%$%$$%$%$%$!   ",
"  !%$%$%$%%%%%%%%%$%$%$%%!  ",
" !%%%%%%%%!!!!!!!%%%%%%%%%! ",
"!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
"!############!!############!",
"!############!!############!",
" !!!!!!!!!!!!!!!!!!!!!!!!!! ",
"                            ",
"                            "
};
static Fl_Pixmap image_showmodel(idata_showmodel);

void RealTimeIKUI::cb_mShowConstr_but_i(Fl_Button* o, void* v) {
  ShowConstr_cb(o, v);
}
void RealTimeIKUI::cb_mShowConstr_but(Fl_Button* o, void* v) {
  ((RealTimeIKUI*)(o->parent()->parent()->user_data()))->cb_mShowConstr_but_i(o,v);
}

static const char *idata_showconstr[] = {
"28 28 -8 1",
" \377\377\377!\377\231\314\"\377""3f#\0\0\0$\0\272\0%www&UUU\'\"\"\"",
"                            ",
"                            ",
"   ######################   ",
"   &&##################&#   ",
"   &&#\"\"\"\"\"\"\"\"#!!!!!!!#&#   ",
"   &&#\"\"\"\"#\"\"#!!#!!!!!#&#   ",
"   &&#\"\"\"\"\"\"\"#!!!!!!!!#&#   ",
"   &&#\"\"\"\"\"\"#!!!!!!!!!#&#   ",
"   &&#\"\"\"\"\"\"#!!!!!!!!!#&#   ",
"   &&#\"\"\"\"\"#!!!!!!!!!!#&#   ",
"   &&#\"\"\"\"\"####!!!!!!!#&#   ",
"   &&#\"\"\"\'\"\"\"\"#!!#!!!!#&#   ",
"   &&#\"\"\"\"\'\'\'\'###!!!!!#&#   ",
"   &&#\"\"\"\"\"\"\"\"#!!!!!!!#&#   ",
"   &&#\"\"\"\"\"\"\"\"#!!!!!!!#&#   ",
"   &&##################&#   ",
"   &&&&&&&&&&&$&&&&&&&&&#   ",
"   &&&&&&&&&&&&&&&&&&&&&#   ",
"   #####################    ",
"   %%&%&%&&%&%&%&&%&%&%&#   ",
"  #%&%&%&%%%%%%%%%&%&%&%%#  ",
" #%%%%%%%%#######%%%%%%%%%# ",
"############################",
"#\'\'\'\'\'\'\'\'\'\'\'\'##\'\'\'\'\'\'\'\'\'\'\'\'#",
"#\'\'\'\'\'\'\'\'\'\'\'\'##\'\'\'\'\'\'\'\'\'\'\'\'#",
" ########################## ",
"                            ",
"                            "
};
static Fl_Pixmap image_showconstr(idata_showconstr);

void RealTimeIKUI::cb_mShowViz_but_i(Fl_Button* o, void* v) {
  ShowViz_cb(o, v);
}
void RealTimeIKUI::cb_mShowViz_but(Fl_Button* o, void* v) {
  ((RealTimeIKUI*)(o->parent()->parent()->user_data()))->cb_mShowViz_but_i(o,v);
}

static const char *idata_showviz[] = {
"28 28 -8 1",
" \377\377\377!\0\0\0\"\17\225T#y\360\267$\0\272\0%www&UUU\'\"\"\"",
"                            ",
"                            ",
"   !!!!!!!!!!!!!!!!!!!!!!   ",
"   &&!!!!!!!!!!!!!!!!!!&!   ",
"   &&!\"\"\"\"\"\"\"\"!#######!&!   ",
"   &&!\"\"\"\"!\"\"!##!#####!&!   ",
"   &&!\"\"\"\"\"\"\"!########!&!   ",
"   &&!\"\"\"\"\"\"!#########!&!   ",
"   &&!\"\"\"\"\"\"!#########!&!   ",
"   &&!\"\"\"\"\"!##########!&!   ",
"   &&!\"\"\"\"\"!!!!#######!&!   ",
"   &&!\"\"\"\'\"\"\"\"!##!####!&!   ",
"   &&!\"\"\"\"\'\'\'\'!!!#####!&!   ",
"   &&!\"\"\"\"\"\"\"\"!#######!&!   ",
"   &&!\"\"\"\"\"\"\"\"!#######!&!   ",
"   &&!!!!!!!!!!!!!!!!!!&!   ",
"   &&&&&&&&&&&$&&&&&&&&&!   ",
"   &&&&&&&&&&&&&&&&&&&&&!   ",
"   !!!!!!!!!!!!!!!!!!!!!    ",
"   %%&%&%&&%&%&%&&%&%&%&!   ",
"  !%&%&%&%%%%%%%%%&%&%&%%!  ",
" !%%%%%%%%!!!!!!!%%%%%%%%%! ",
"!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
"!\'\'\'\'\'\'\'\'\'\'\'\'!!\'\'\'\'\'\'\'\'\'\'\'\'!",
"!\'\'\'\'\'\'\'\'\'\'\'\'!!\'\'\'\'\'\'\'\'\'\'\'\'!",
" !!!!!!!!!!!!!!!!!!!!!!!!!! ",
"                            ",
"                            "
};
static Fl_Pixmap image_showviz(idata_showviz);

void RealTimeIKUI::cb_mSolve_but_i(Fl_Button* o, void* v) {
  Solve_cb(o, v);
}
void RealTimeIKUI::cb_mSolve_but(Fl_Button* o, void* v) {
  ((RealTimeIKUI*)(o->parent()->parent()->user_data()))->cb_mSolve_but_i(o,v);
}

static const char *idata_interactive[] = {
"28 28 -9 1",
" \0\377\377!\0\0\231\"\0\0\0#\0\231\231$\314\314\314%\377\377\377&\231\231\
\231\'\0\377\0(\0\231\0",
" !!                         ",
" !#\"                        ",
" !##\"                       ",
"   ###\"                     ",
"   !###\"                    ",
"    !###\" ##########        ",
"     !###\"$$$$$$$$$$####    ",
"    ##!###%%%%%%%%%%$$$$##  ",
"   #$$$!##\"%%%%%%%%%%%%%$$\" ",
"   #$%$$!##\"%%%%%%%%%%%%%$\" ",
"    #$$$$%###\"%%%%%%%%%$$\"  ",
"    #%%$$$!###\"%%%%%$$$%&\"  ",
"     #%$$%$$$$$$$$$$%%%%\"   ",
"     #%$$%%%!###\"%%%%%%%\"   ",
"     #%$$%\'\'\'!###\'\'%%%%%\"   ",
"     #%$(\'\'\'\'\'!##\"\'\'\'\'%%\"   ",
"     #\'((\'\'\'\'\'\'!##\"\'\'\'\'\'\"   ",
"     #%((\'\'\'\'\'\'\'\'#((&\'\'%\"   ",
"     #\'%%\'\'\'\'\'\'\'\'(#((%%\'\"   ",
"     #\'((%%&&&&&&&%%%(&\'\"   ",
"     #\'((((%%%%%%%((#(&\'\"   ",
"     #\'((\'\'\'\'\'\'\'\'\'\'\'&&\'\'\"   ",
"     #\'((\'\'\'\'\'\'\'\'\'\'\'\'\'(\'\"   ",
"     #\'((\'\'\'\'\'\'\'\'\'\'\'\'\'$\'\"   ",
"      \"(((\'\'\'\'\'\'\'\'\'\'\'$$(    ",
"       \"(((\'\'\'\'\'\'\'\'((((\"    ",
"        \"\"((((((((((\"\"\"     ",
"          \"\"\"\"\"\"\"\"\"\"        "
};
static Fl_Pixmap image_interactive(idata_interactive);

void RealTimeIKUI::cb_mTerminate_but_i(Fl_Button* o, void* v) {
  Terminate_cb(o, v);
}
void RealTimeIKUI::cb_mTerminate_but(Fl_Button* o, void* v) {
  ((RealTimeIKUI*)(o->parent()->parent()->user_data()))->cb_mTerminate_but_i(o,v);
}

static const char *idata_terminate[] = {
"28 28 -239 1",
" \377\377\377!\366.\24\"\365.\24#\365-\23$\203\201\202%uvw&\311\313\314\'\
\240\246\247(\307\315\316)\227\236\237*\264\275\276+\240\250\251,\351\361\362-\
\262\275\276.\264\277\300/\325\340\341""0\214\220\220""1\334\341\341""2\214\
\217\217""3\333\337\337""4\247\251\251""5\375\377\377""6\371\373\373""7\346\
\347\347""8\372\366\365""9\375\351\345:\360\346\344;\364\353\351<\222\200}=\
\363\342\337>pji?\276\32\4@\362#\7""A\342!\7""B\345\"\bC\320\37\7""D\366%\tE\
\366\'\13""F\304\37\tG\316!\nH\360(\rI\365*\17J\353(\16K\343\'\16L\366,\21M\
\366-\22N\367.\23O\324\'\20P\360-\23Q\372""0\25R\354.\24S\303\'\22T\304(\23U\
\366""5\33V\266\'\24W\325""2\34X\226\'\30Y\274""4!Z\366""D,[\233+\34\\\246""0 \
]\367L5^\342""F1_\366N7`\361M7a\237""4%b\364P:c\367T>d\341M9e\364[Ff\257""A2g\
\367""aMh\273L=i\365gSj\345`Nk\365jWl\367q_m\370yhn\326j[o\342tep\333rdq\306gZ\
r\375\210xs\371\207wt\215MDu\371\215~v\371\221\203w\324{ox\210QHy\371\231\214z\
\372\236\221{\304~t|\372\241\225}\201UO~\365\245\232\177\373\251\236\200\220ga\
\201\363\262\251\202\227qk\203\220lg\204\373\302\272\205\277\225\217\206v]Y\
\207\364\302\273\210\260\235\232\211\374\365\364\212\364\35\2\213\344\36\4\
\214\355 \5\215\365!\6\216\365\"\7\217\355!\7\220\365#\b\221\363#\b\222\361#\b\
\223\354\"\b\224\364$\t\225\347\"\t\226\365%\n\227\323 \t\230\306\36\b\231\
\370&\13\232\365&\13\233\353%\13\234\255\33\b\235\366\'\f\236\371(\r\237\366(\
\r\240\365(\r\241\365\'\r\242\363\'\r\243\345%\f\244\322\"\13\245\275\36\n\
\246\370)\16\247\365)\16\250\345&\r\251\371*\17\252\367)\17\253\366*\17\254\
\362)\17\255\370+\20\256\356)\17\257\354(\17\260\367+\21\261\365+\21\262\363+\
\21\263\356)\20\264\326&\17\265\371-\22\266\365,\22\267\364,\22\270\364-\23\
\271\356+\22\272\364.\24\273\341)\22\274\372/\25\275\371/\25\276\367/\25\277\
\363-\24\300\361.\25\301\346.\26\302\362""1\30\303\360""3\32\304\252#\22\305\
\246#\22\306\362""5\34\307\274)\26\310\245$\23\311\303+\30\312\364""7\37\313\
\273+\30\314\357<%\315\242)\31\316\333;&\317\343""C.\320\304;)\321\367K5\322\
\221- \323\350H4\324\357P<\325\365VA\326\336O=\327\367YE\330\341TB\331\354ZG\
\332\367""dQ\333\304O@\334\367""eR\335\357iX\336\355jY\337\370o^\340\200:1\
\341\370sb\342\327""eV\343\202=4\344\306`S\345\214G>\346\371\204u\347\371\210z\
\350\327zn\351\243]T\352\367\220\203\353\372\227\212\354\360\221\205\355\366\
\231\215\356\347\226\214\357\353\231\220\360\270{s\361\373\257\245\362\243sm\
\363\373\263\252\364\347\252\243\365z[W\366\343\270\263\367\334\262\255\370\
\347\276\271\371\343\273\266\372\246\213\210\373\357\324\321\374\366\337\334\
\375\355\333\331\376\362\342\340\377\211XS\0\334\263\257\1\354\316\313\2\361\
\334\332\3\271\257\256\4\366\353\352\5\324\306\305\6\362\351\351\7\372\365\
\365\b\377\374\374\t\372\370\370\n\265\263\263\13\377\376\376\f\371\371\371\r\
\325\325\325\16\377\377\377",
"                            ",
"                            ",
"                            ",
"           zlc\332\347\361           ",
"        \363g\240\215\235I\240\226\212\321\355         ",
"       \341\266\220\"\"\"\"\"\"\"\241\216\324\370       ",
"      g\247\261\"\"\277\263\233\233HM\276#D\314\0      ",
"     s\240#\"\"\272""F\304""fh\320\227\214!\"\231\323\5     ",
"     U\247\"\"\"I\316\371\4""8\375\367\342\223N\"\236n1    ",
"    \337\215\"\"#\"#\265r\16\16\16\16\t\357\271LLR\205    ",
"    ZI\275\273\264\242!#\226\346\b\16\16\16,o\252#\237\333(   ",
"    \215!\275?{\335\220\276#\220u\16\16\16\16\1\306\253\251W\210   ",
"   y\232\275JY:\211j\222!\261\224v\16\16\16\fe\240\265\301\362   ",
"   m\240\275""A\344\7\16;\330@!\261\240\353\16\16\13i\241\274""B\345   ",
"   s\235\275\213w5\16\16=d\221\276#\240|55\334\241\274\225\343.  ",
"   \177\224!\217p6\16\16\16\376""d\224\276I\255\356""7]\240\274""A\340-  ",
"    \261#\246\326\6\16\16\16\16\2^\224\"I\302\336\312LLOx*  ",
"    \327\226!\256\207\16\16\16\16\16\373\317\235!#L\"!\261\307\203   ",
"    \352""D#\237\325""9\16\16\16\16\16\374\331\241!\"\"\275\243X$   ",
"     `E\"\226_\204\16\16\16\16""5\366\303L\"!\270\245t)   ",
"     \364\300\260\"I#b\354\201~k\312#\"!\275G[>&   ",
"      \350\222\265\"\"\261\226\216\220\247\"\"!QC\305\365\'    ",
"       q\250\265!\"\"\"\"\"\"\275P\230\310}2     ",
"       3\360\311K\254\262\267\267\262\257\244\234""a\206""0      ",
"         \3\351\\\313TSV\315\322\377%4       ",
"          /\n\372\202\200\203<0+\r        ",
"                            ",
"                            "
};
static Fl_Pixmap image_terminate(idata_terminate);

static const char *idata_about[] = {
"30 30 -6 1",
" \312\342\377!\377\377\377\"\0\0\0#\262\262\262$\231\231\377%ff\314",
"                    \"\"\"\"      ",
"                   \"$$$$\"     ",
"                  \"$$$$$$\"    ",
"           ###### \"$$$%%%%\"   ",
"         ######\"\"\"\"$$$%%%%\"   ",
"        ######\"$$$\"$$%%%%%\"   ",
"       ######\"$$$$\"\"$%%%%%\"   ",
"       ######\"$$$\"$%%%\"\"\"     ",
"        #####\"$$$$\"%%%%%%\"    ",
"         ####\"$$$$$\"\"\"%%%\"    ",
"  \"\"\"\"\"\"\"\"\"\"\"\"\"%%$$$$%%%%\"    ",
"  \"!!!!!!!#####\"%%%%%%%%\"\"    ",
"  \"!!!!!!!!!!#\"\"\"%%%%%\"\"\"     ",
"   \"!!!!!!!!!#\"!\"\"\"\"\"\"!!\"     ",
"   \"!!\"\"\"\"\"\"!!\"\"\"!!!!!!!\"     ",
"   \"!!!!!!!!!!!!!!!!!!!!\"     ",
"   \"!!!!!!!!!!!!!!!!!!!!!\"    ",
"   \"!!!\"\"\"\"\"\"!!!\"\"\"\"\"\"!!!\"    ",
"   \"!!!!!!!!!!!!!!!!!!!!!\"    ",
"   \"!!!!!!\"\"\"\"!!!!!!\"\"\"\"!\"    ",
"    \"!!!!!!!!!!!!!!!!!!!!\"    ",
"    \"!\"\"\"\"\"\"!\"\"\"\"\"\"\"\"\"!!!\"    ",
"    \"!!!!!!!!!!!!!!!!!!!!!\"   ",
"    \"!!\"\"\"\"\"\"\"\"\"\"\"\"\"!!\"\"!!\"   ",
"    \"!!!!!!!!!!!!!!!!!!!!!!\"  ",
"    \"!!\"\"\"\"\"\"\"\"\"\"\"\"\"!\"\"!\"!!\"  ",
"    \"\"!!!!!!!!!!!!!!!!!!!!!!\" ",
"     \"!!!!!!!!!!!\"\"\"\"\"\"!!!!!\" ",
"     \"!!!!!!!!!!!!!!!!!!!!!!\" ",
"      \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" "
};
static Fl_Pixmap image_about(idata_about);

RealTimeIKUI::RealTimeIKUI() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = mFLWindow = new Fl_Double_Window(642, 609, "RealTimeIK");
    w = o;
    o->box(FL_PLASTIC_UP_BOX);
    o->labelfont(1);
    o->user_data((void*)(this));
    { Fl_Group* o = new Fl_Group(0, 540, 640, 65);
      { Fl_Value_Slider* o = mFrame_sli = new Fl_Value_Slider(4, 549, 460, 15, "Frame");
        o->type(3);
        o->box(FL_PLASTIC_UP_BOX);
        o->color((Fl_Color)3);
        o->labelfont(1);
        o->labelsize(13);
        o->step(1);
        o->textsize(9);
        o->callback((Fl_Callback*)cb_mFrame_sli);
        o->align(FL_ALIGN_LEFT);
      }
      { Fl_Value_Slider* o = mBegin_sli = new Fl_Value_Slider(4, 567, 460, 15, "Begin");
        o->type(5);
        o->box(FL_PLASTIC_UP_BOX);
        o->color((Fl_Color)1);
        o->labelfont(1);
        o->labelsize(13);
        o->step(1);
        o->textsize(9);
        o->align(FL_ALIGN_LEFT);
      }
      { Fl_Value_Slider* o = mEnd_sli = new Fl_Value_Slider(4, 585, 460, 15, "End");
        o->type(5);
        o->box(FL_PLASTIC_UP_BOX);
        o->color((Fl_Color)2);
        o->labelfont(1);
        o->labelsize(13);
        o->step(1);
        o->textsize(9);
        o->align(FL_ALIGN_LEFT);
      }
      { Fl_Button* o = mLoop_but = new Fl_Button(465, 569, 65, 35, "LOOP");
        o->type(1);
        o->box(FL_PLASTIC_UP_BOX);
        o->color(FL_BACKGROUND2_COLOR);
        o->selection_color((Fl_Color)4);
        o->labelfont(1);
        o->labelsize(12);
      }
      { Fl_Counter* o = mFrameCounter_cou = new Fl_Counter(465, 540, 130, 29);
        o->box(FL_PLASTIC_UP_BOX);
        o->color(FL_BACKGROUND2_COLOR);
        o->selection_color((Fl_Color)4);
        o->labelfont(1);
        o->labelsize(13);
        o->minimum(0);
        o->step(1);
        o->textsize(12);
        o->callback((Fl_Callback*)cb_mFrameCounter_cou);
        o->lstep(5);
      }
      { Fl_Button* o = mPlay_but = new Fl_Button(530, 569, 65, 35, "@>");
        o->type(1);
        o->box(FL_PLASTIC_UP_BOX);
        o->color(FL_BACKGROUND2_COLOR);
        o->selection_color((Fl_Color)4);
        o->labelfont(1);
        o->labelsize(20);
        o->callback((Fl_Callback*)cb_mPlay_but);
      }
      { Fl_Roller* o = mSpeed_rol = new Fl_Roller(595, 540, 45, 64);
        o->tooltip("Adjust playback speed");
        o->box(FL_PLASTIC_UP_BOX);
        o->selection_color((Fl_Color)4);
        o->labelsize(12);
        o->labelcolor(FL_SELECTION_COLOR);
        o->minimum(0.01);
        o->step(0.01);
        o->value(0.07);
        o->callback((Fl_Callback*)cb_mSpeed_rol);
        o->align(FL_ALIGN_TOP);
      }
      o->end();
    }
    { Fl_Menu_Bar* o = new Fl_Menu_Bar(0, 0, 975, 25);
      o->box(FL_PLASTIC_UP_BOX);
      o->menu(menu_);
    }
    { Fl_Group* o = new Fl_Group(0, 25, 975, 35);
      { Fl_Button* o = mModel_but = new Fl_Button(0, 25, 40, 35);
        o->tooltip("Load  model");
        o->box(FL_PLASTIC_UP_BOX);
        o->color(FL_BACKGROUND2_COLOR);
        o->selection_color((Fl_Color)4);
        o->image(image_default);
        o->callback((Fl_Callback*)cb_mModel_but);
      }
      { Fl_Button* o = mConstr_but = new Fl_Button(40, 25, 35, 35);
        o->tooltip("Load constraints");
        o->box(FL_PLASTIC_UP_BOX);
        o->color(FL_BACKGROUND2_COLOR);
        o->selection_color((Fl_Color)4);
        o->image(image_constr);
        o->callback((Fl_Callback*)cb_mConstr_but);
      }
      { Fl_Button* o = mShowModel_but = new Fl_Button(75, 25, 35, 35);
        o->tooltip("Show model");
        o->type(1);
        o->box(FL_PLASTIC_UP_BOX);
        o->color(FL_BACKGROUND2_COLOR);
        o->selection_color((Fl_Color)4);
        o->image(image_showmodel);
        o->callback((Fl_Callback*)cb_mShowModel_but);
      }
      { Fl_Button* o = mShowConstr_but = new Fl_Button(110, 25, 35, 35);
        o->tooltip("Show Constraints");
        o->type(1);
        o->box(FL_PLASTIC_UP_BOX);
        o->color(FL_BACKGROUND2_COLOR);
        o->selection_color((Fl_Color)4);
        o->image(image_showconstr);
        o->callback((Fl_Callback*)cb_mShowConstr_but);
      }
      { Fl_Button* o = mShowViz_but = new Fl_Button(145, 25, 35, 35);
        o->tooltip("Show Markers");
        o->type(1);
        o->box(FL_PLASTIC_UP_BOX);
        o->color(FL_BACKGROUND2_COLOR);
        o->selection_color((Fl_Color)4);
        o->image(image_showviz);
        o->callback((Fl_Callback*)cb_mShowViz_but);
      }
      { Fl_Button* o = mSolve_but = new Fl_Button(180, 25, 35, 35);
        o->tooltip("Solve");
        o->box(FL_PLASTIC_UP_BOX);
        o->color(FL_BACKGROUND2_COLOR);
        o->selection_color((Fl_Color)4);
        o->image(image_interactive);
        o->callback((Fl_Callback*)cb_mSolve_but);
      }
      { Fl_Button* o = mTerminate_but = new Fl_Button(215, 25, 35, 35);
        o->tooltip("Terminate solver");
        o->box(FL_PLASTIC_UP_BOX);
        o->color(FL_BACKGROUND2_COLOR);
        o->selection_color((Fl_Color)4);
        o->image(image_terminate);
        o->callback((Fl_Callback*)cb_mTerminate_but);
      }
      { Fl_Button* o = mAbout_but = new Fl_Button(250, 25, 35, 35);
        o->tooltip("About");
        o->box(FL_PLASTIC_UP_BOX);
        o->color(FL_BACKGROUND2_COLOR);
        o->selection_color((Fl_Color)4);
        o->image(image_about);
      }
      o->resizable(NULL);
      o->end();
    }
    { Phylter_Fl_Gl_Window* o = mGLWindow = new Phylter_Fl_Gl_Window(0, 60, 640, 480);
      o->box(FL_THIN_DOWN_BOX);
      o->color(FL_BACKGROUND_COLOR);
      o->selection_color(FL_BACKGROUND_COLOR);
      o->labeltype(FL_NORMAL_LABEL);
      o->labelfont(0);
      o->labelsize(14);
      o->labelcolor(FL_FOREGROUND_COLOR);
      o->align(FL_ALIGN_CENTER);
      o->when(FL_WHEN_RELEASE);
    }
    o->end();
    o->resizable(o);
  }
  mData = new PhowardData();
}

void RealTimeIKUI::Show() {
  mFLWindow->show();
    mGLWindow->show();
}

void RealTimeIKUI::CreateDofSliderWindow() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = mDofSliderWindow = new Fl_Double_Window(378, 610, "Joint Angles");
    w = o;
    o->user_data((void*)(this));
    { Fl_Scroll* o = new Fl_Scroll(0, 0, 380, 610);
      o->box(FL_THIN_DOWN_BOX);
      o->labelsize(13);
      InitSliders();
      o->end();
    }
    o->end();
    o->resizable(o);
  }
}

void RealTimeIKUI::InitSliders() {
  for(int i = 0; i < mDofs_sli.size(); i++)
	delete mDofs_sli[i];
mDofs_sli.clear();	
	
int nDof = mData->mSelectedModel->GetDofCount();
int yPos = 10;
for(int i = 0; i < nDof; i++){
	Dof *currDof = mData->mSelectedModel->mDofList.mDofs[i];
	Fl_Value_Slider *o = new Fl_Value_Slider(110, yPos, 250, 15, currDof->GetName());
	o->type(1);
	o->selection_color(15);
	o->labelsize(13);
	o->labelcolor(15);
	o->maximum(mData->mSelectedModel->mDofList.mDofs[i]->mUpperBound);
	o->minimum(mData->mSelectedModel->mDofList.mDofs[i]->mLowerBound);
	o->align(FL_ALIGN_LEFT);
	o->callback((Fl_Callback*)DofSliders_cb, (void*)(i));
	mDofs_sli.push_back(o);
	yPos += 20;
}
int height = 610;
if(yPos + 10 < height)
	height = yPos + 10;
mDofSliderWindow->resize(100, 100, 380, height);
}

void RealTimeIKUI::InitControlPanel() {
  mFrame_sli->range(0, mData->mSelectedModel->mOpenedC3dFile->GetFrameCount() - 1);
mFrame_sli->value(0);
mBegin_sli->range(0, mData->mSelectedModel->mOpenedC3dFile->GetFrameCount() - 1);
mBegin_sli->value(0);
mEnd_sli->range(0, mData->mSelectedModel->mOpenedC3dFile->GetFrameCount() - 1);
mEnd_sli->value(mData->mSelectedModel->mOpenedC3dFile->GetFrameCount() - 1);
mFrameCounter_cou->value(0);
mFrameCounter_cou->maximum(mData->mSelectedModel->mOpenedC3dFile->GetFrameCount() - 1);
mPlay_but->label("@>");
mLoop_but->value(0);
}

void RealTimeIKUI::DeleteSliderWindow() {
  if(mDofSliderWindow->shown())
	mDofSliderWindow->hide();
int nDof = mData->mSelectedModel->GetDofCount();
for(int i = nDof - 1; i >= 0; i--)
	delete mDofs_sli[i];
mDofs_sli.clear();

delete mDofSliderWindow;
}

void RealTimeIKUI::Increment() {
  int currentFrame = mFrameCounter_cou->value() + 1;
  
  int longestMotion = 0;
  for(int i = 0; i < mData->mModels.size(); i++){
    if(mData->mModels[i]->mOpenedC3dFile){
      int lastFrame = mData->mModels[i]->mOpenedC3dFile->GetFrameCount();
      if(lastFrame > longestMotion)
	longestMotion = lastFrame;
    }
  }
	  
  if( currentFrame >= longestMotion)
    currentFrame = 0;

  if(mLoop_but->value()){
    int beginFrame = int(mBegin_sli->value());
    int endFrame = int(mEnd_sli->value());
    
    if(currentFrame < beginFrame)
      currentFrame = beginFrame;
    else if(currentFrame >= endFrame)
      currentFrame = beginFrame;
  }      

  mFrame_sli->value(currentFrame);
  mFrameCounter_cou->value(currentFrame);
  mFrameCounter_cou->value(currentFrame);
}
