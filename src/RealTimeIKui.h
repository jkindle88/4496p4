// generated by Fast Light User Interface Designer (fluid) version 1.0107

#ifndef RealTimeIKui_h
#define RealTimeIKui_h
#include <FL/Fl.H>
#include <vector>
#include <fstream>
class Phylter_Fl_Gl_Window;
class PhowardData;
#include "UICallback.h"
#include <FL/filename.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Value_Slider.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Counter.H>
#include <FL/Fl_Roller.H>
#include <FL/Fl_Menu_Bar.H>
#include <FL/Fl_Scroll.H>

class RealTimeIKUI {
public:
  Fl_Cursor mCursor;
  std::vector<Fl_Value_Slider*> mDofs_sli;
  RealTimeIKUI();
  Fl_Double_Window *mFLWindow;
  Fl_Value_Slider *mFrame_sli;
private:
  void cb_mFrame_sli_i(Fl_Value_Slider*, void*);
  static void cb_mFrame_sli(Fl_Value_Slider*, void*);
public:
  Fl_Value_Slider *mBegin_sli;
  Fl_Value_Slider *mEnd_sli;
  Fl_Button *mLoop_but;
  Fl_Counter *mFrameCounter_cou;
private:
  void cb_mFrameCounter_cou_i(Fl_Counter*, void*);
  static void cb_mFrameCounter_cou(Fl_Counter*, void*);
public:
  Fl_Button *mPlay_but;
private:
  void cb_mPlay_but_i(Fl_Button*, void*);
  static void cb_mPlay_but(Fl_Button*, void*);
public:
  Fl_Roller *mSpeed_rol;
private:
  void cb_mSpeed_rol_i(Fl_Roller*, void*);
  static void cb_mSpeed_rol(Fl_Roller*, void*);
  static Fl_Menu_Item menu_[];
  void cb_Load_i(Fl_Menu_*, void*);
  static void cb_Load(Fl_Menu_*, void*);
  void cb_Load1_i(Fl_Menu_*, void*);
  static void cb_Load1(Fl_Menu_*, void*);
  void cb_Exit_i(Fl_Menu_*, void*);
  static void cb_Exit(Fl_Menu_*, void*);
  void cb_Sliders_i(Fl_Menu_*, void*);
  static void cb_Sliders(Fl_Menu_*, void*);
  void cb_Solve_i(Fl_Menu_*, void*);
  static void cb_Solve(Fl_Menu_*, void*);
  void cb_Terminate_i(Fl_Menu_*, void*);
  static void cb_Terminate(Fl_Menu_*, void*);
public:
  Fl_Button *mModel_but;
private:
  void cb_mModel_but_i(Fl_Button*, void*);
  static void cb_mModel_but(Fl_Button*, void*);
public:
  Fl_Button *mConstr_but;
private:
  void cb_mConstr_but_i(Fl_Button*, void*);
  static void cb_mConstr_but(Fl_Button*, void*);
public:
  Fl_Button *mShowModel_but;
private:
  void cb_mShowModel_but_i(Fl_Button*, void*);
  static void cb_mShowModel_but(Fl_Button*, void*);
public:
  Fl_Button *mShowConstr_but;
private:
  void cb_mShowConstr_but_i(Fl_Button*, void*);
  static void cb_mShowConstr_but(Fl_Button*, void*);
public:
  Fl_Button *mShowViz_but;
private:
  void cb_mShowViz_but_i(Fl_Button*, void*);
  static void cb_mShowViz_but(Fl_Button*, void*);
public:
  Fl_Button *mSolve_but;
  Fl_Button *mTerminate_but;
private:
  void cb_mSolve_but_i(Fl_Button*, void*);
  static void cb_mSolve_but(Fl_Button*, void*);
  void cb_mTerminate_but_i(Fl_Button*, void*);
  static void cb_mTerminate_but(Fl_Button*, void*);
public:
  Fl_Button *mAbout_but;
  Phylter_Fl_Gl_Window *mGLWindow;
  void Show();
  void CreateDofSliderWindow();
  Fl_Double_Window *mDofSliderWindow;
  void InitSliders();
  void InitControlPanel();
  void DeleteSliderWindow();
  void Increment();
  PhowardData *mData;
};
#endif
